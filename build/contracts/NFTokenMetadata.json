{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        }
      ],
      "name": "logg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "flagg",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenid",
          "type": "uint256"
        }
      ],
      "name": "logtt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lek",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lekshmi",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "val",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "_safe5",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getAllTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lek",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nbonds",
          "type": "uint256"
        }
      ],
      "name": "safe",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"logg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flagg\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"}],\"name\":\"logtt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lek\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lekshmi\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"val\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"_safe5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAllTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lek\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nbonds\",\"type\":\"uint256\"}],\"name\":\"safe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"}},\"safe(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\"},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":\"When implementing this contract don't forget to set nftName and nftSymbol.\",\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safe(address,address,uint256)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTokenMetadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC721.sol\":{\"keccak256\":\"0x6c8cfc7d4164d8f31c15529641999600d68e5b4a442117b6875196e40c39473a\",\"urls\":[\"bzz-raw://a03285270363e9cfdcf6c4cbc46a1db35e8ea62d3d2804c3b0378b71c4a2f90f\",\"dweb:/ipfs/QmYBe7ZMY2VYThbTLzqsvGiPDUuxDFiJtGyLRJRNJbUxiV\"]},\"project:/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0x7754477f3698d53b1d9905f9f7ee953fa6b47e1a73bac9537bf7b2134b4fadf6\",\"urls\":[\"bzz-raw://807c14e8608b3273690b0b02b3f4e05f708d444808519749df2affbb277520a9\",\"dweb:/ipfs/QmWs46ZG3r8hFi9vMDH4oDN5BzugeXRYu2higC2ymTCe9m\"]},\"project:/contracts/ERC721TokenReceiver.sol\":{\"keccak256\":\"0xe26531361ec73a0739b4999df94e2872b18588e8665bf21650a6636ab35243e0\",\"urls\":[\"bzz-raw://6a88f69d989642a99febd970742738c67f4025e7bfdd6eb36e2c763e7994976b\",\"dweb:/ipfs/QmVscXhfrTkMqTVjLyE5jPsX8Am1rHwRsYe9fEggeUVPz9\"]},\"project:/contracts/NFToken.sol\":{\"keccak256\":\"0x7e4d8971202c2eea48194aff69860c2b3723895d6e4771fffda73efca187ada2\",\"urls\":[\"bzz-raw://bede7847dc2026679402573413a3ec35d0eeca2e5636e3d98b0f8905765a4175\",\"dweb:/ipfs/QmcFYFPkggfTvtiGwtTN18zJeLMEJ2ENspxrjTKBw4p3Qz\"]},\"project:/contracts/NFTokenMetadata.sol\":{\"keccak256\":\"0x074ae7d82d0abddf62d1bc495ab708b2ca9f9614b4599135aac6380f9a427498\",\"urls\":[\"bzz-raw://78b8d77f92a361a41764212d0e09ba698aa036226a5f17bd4f1a0524f7034de0\",\"dweb:/ipfs/QmNyGBERosvxTk7GgKhNBfC69QfRU2gudxGEkoENrpc5SG\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x41d027dc8b0bcde1615a1b566540959e2ecb22e6d56342682d2d661a20994f3a\",\"urls\":[\"bzz-raw://62b251204e3b692337d2684e650b182eaf5d0aea95e2c3214db234ac758e8a35\",\"dweb:/ipfs/QmZPK64jhF2F4LHDsDkDb2UbtwQAhTcaqMfZ46YFKJgkco\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0xfaa33500567ef5e3b2253b4821776e72299022b9ccf4145fd4eee7490162a87c\",\"urls\":[\"bzz-raw://d8ac0240ad67db099d641e119b2941e1dbce7789da4940a727faf7493703ec73\",\"dweb:/ipfs/QmNYgnEAyMW2pXpczxTRZzjuQxYVr7KauF6mcnyR9fPTz9\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/ERC165.sol\":{\"keccak256\":\"0x41d332d084890184974a5f26a0e4a154957618f1f488161b792515520b84eec9\",\"urls\":[\"bzz-raw://9d80b7ba46909fabf188a04929864dedd50e4a9978ecfb7a22fed18d713eba86\",\"dweb:/ipfs/QmbpuJiL2Jj5hw9v5kTPEA4a1SxuLbPZSnek37z39bL6iC\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/SupportsInterface.sol\":{\"keccak256\":\"0xf6a5354161c09b96bda396adb48bba6c772564e3b6a86bed0ac8721804ec379d\",\"urls\":[\"bzz-raw://d45de7c777b31f64b2499ddc6dea7c2934783b9ed3d37c1b925b328a962abd91\",\"dweb:/ipfs/Qmf8B5eiu58nEuqu4xCLDFwTpDrTXeu28eR7BtdCZ1nMAi\"]}},\"version\":1}",
  "bytecode": "0x6080604052732d617c3b6679113219c98c8efa58074fb4da251b600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550611cef806101686000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a257806397bddb2f1161007157806397bddb2f14610661578063a22cb465146106cf578063b88d4fde1461071f578063c87b56dd146107e2578063e985e9c51461088957610116565b80636352211e146104ce57806370a082311461053c5780638caecbb71461059457806395d89b41146105de57610116565b8063178b6de6116100e9578063178b6de6146102bf57806323b872dd1461035857806342842e0e146103c65780634f64b2be14610434578063620348f11461047657610116565b806301ffc9a71461011b57806306fdde0314610180578063081812fc14610203578063095ea7b314610271575b600080fd5b6101666004803603602081101561013157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610905565b604051808215151515815260200191505060405180910390f35b61018861096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61022f6004803603602081101561021957600080fd5b8101908080359060200190929190505050610a0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bd6004803603604081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b005b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610344578082015181840152602081019050610329565b505050509050019250505060405180910390f35b6103c46004803603606081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de7565b005b610432600480360360608110156103dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ea2565b005b6104606004803603602081101561044a57600080fd5b8101908080359060200190929190505050610ec2565b6040518082815260200191505060405180910390f35b6104b86004803603602081101561048c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee3565b6040518082815260200191505060405180910390f35b6104fa600480360360208110156104e457600080fd5b8101908080359060200190929190505050610fe6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057e6004803603602081101561055257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105d565b6040518082815260200191505060405180910390f35b61059c6110df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105e6611105565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062657808201518184015260208101905061060b565b50505050905090810190601f1680156106535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106cd6004803603606081101561067757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a7565b005b61071d600480360360408110156106e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111b7565b005b6107e06004803603608081101561073557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561079c57600080fd5b8201836020820111156107ae57600080fd5b803590602001918460018302840111640100000000831117156107d057600080fd5b90919293919293905050506111c5565b005b61080e600480360360208110156107f857600080fd5b810190808035906020019092919050505061121c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084e578082015181840152602081019050610833565b50505050905090810190601f16801561087b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108eb6004803603604081101561089f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611340565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a7e57600080fd5b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610bb35750600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bbc57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c2a57600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610c9b57600080fd5b856005600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ddb57602002820191906000526020600020905b815481526020019060010190808311610dc7575b50505050509050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e9157600080fd5b610e9b8383611447565b5050505050565b610ebd838383604051806020016040528060008152506114f9565b505050565b60028181548110610ecf57fe5b906000526020600020016000915090505481565b6000806001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610f7a57fe5b90600052602060002001549050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548110610fd257fe5b906000526020600020015492505050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561105857600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561109857600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561119d5780601f106111725761010080835404028352916020019161119d565b820191906000526020600020905b81548152906001019060200180831161118057829003601f168201915b5050505050905090565b6111b283838361150a565b505050565b6111c182826116ae565b5050565b61121585858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506114f9565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561128c57600080fd5b600d60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113335780601f1061130857610100808354040283529160200191611333565b820191906000526020600020905b81548152906001019060200180831161131657829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561137b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113b557600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061148a81846117e9565b6114948484611ad9565b828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a48291505092915050565b6115038383611447565b5050505050565b60008090505b818110156116a857600060066000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061158657fe5b906000526020600020015490507f8026a9704efe6321bfec7a15f26b062559b256f7e014486dc1ac9034de32080081600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a161169a600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168683604051806020016040528060008152506114f9565b508080600101915050611510565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e857600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161183257fe5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161193a57fe5b60006003600083815260200190815260200160002054905060006001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119e857fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611a4057fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611aa09190611c69565b50826003600083815260200190815260200160002081905550600060036000868152602001908152602001600020819055505050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b7e6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c4d90919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036003600084815260200190815260200160002081905550505050565b600080828401905083811015611c5f57fe5b8091505092915050565b815481835581811115611c9057818360005260206000209182019101611c8f9190611c95565b5b505050565b611cb791905b80821115611cb3576000816000905550600101611c9b565b5090565b9056fea265627a7a723158209e0002955e4750a2e0cf6e6b606af8b5a82a315a5f3cf25a7bf9fa33a7a104f364736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a257806397bddb2f1161007157806397bddb2f14610661578063a22cb465146106cf578063b88d4fde1461071f578063c87b56dd146107e2578063e985e9c51461088957610116565b80636352211e146104ce57806370a082311461053c5780638caecbb71461059457806395d89b41146105de57610116565b8063178b6de6116100e9578063178b6de6146102bf57806323b872dd1461035857806342842e0e146103c65780634f64b2be14610434578063620348f11461047657610116565b806301ffc9a71461011b57806306fdde0314610180578063081812fc14610203578063095ea7b314610271575b600080fd5b6101666004803603602081101561013157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610905565b604051808215151515815260200191505060405180910390f35b61018861096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61022f6004803603602081101561021957600080fd5b8101908080359060200190929190505050610a0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bd6004803603604081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b005b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610344578082015181840152602081019050610329565b505050509050019250505060405180910390f35b6103c46004803603606081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de7565b005b610432600480360360608110156103dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ea2565b005b6104606004803603602081101561044a57600080fd5b8101908080359060200190929190505050610ec2565b6040518082815260200191505060405180910390f35b6104b86004803603602081101561048c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee3565b6040518082815260200191505060405180910390f35b6104fa600480360360208110156104e457600080fd5b8101908080359060200190929190505050610fe6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057e6004803603602081101561055257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105d565b6040518082815260200191505060405180910390f35b61059c6110df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105e6611105565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062657808201518184015260208101905061060b565b50505050905090810190601f1680156106535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106cd6004803603606081101561067757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a7565b005b61071d600480360360408110156106e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111b7565b005b6107e06004803603608081101561073557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561079c57600080fd5b8201836020820111156107ae57600080fd5b803590602001918460018302840111640100000000831117156107d057600080fd5b90919293919293905050506111c5565b005b61080e600480360360208110156107f857600080fd5b810190808035906020019092919050505061121c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084e578082015181840152602081019050610833565b50505050905090810190601f16801561087b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108eb6004803603604081101561089f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611340565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a7e57600080fd5b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610bb35750600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bbc57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c2a57600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610c9b57600080fd5b856005600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ddb57602002820191906000526020600020905b815481526020019060010190808311610dc7575b50505050509050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e9157600080fd5b610e9b8383611447565b5050505050565b610ebd838383604051806020016040528060008152506114f9565b505050565b60028181548110610ecf57fe5b906000526020600020016000915090505481565b6000806001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610f7a57fe5b90600052602060002001549050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548110610fd257fe5b906000526020600020015492505050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561105857600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561109857600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561119d5780601f106111725761010080835404028352916020019161119d565b820191906000526020600020905b81548152906001019060200180831161118057829003601f168201915b5050505050905090565b6111b283838361150a565b505050565b6111c182826116ae565b5050565b61121585858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506114f9565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561128c57600080fd5b600d60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113335780601f1061130857610100808354040283529160200191611333565b820191906000526020600020905b81548152906001019060200180831161131657829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561137b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113b557600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061148a81846117e9565b6114948484611ad9565b828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a48291505092915050565b6115038383611447565b5050505050565b60008090505b818110156116a857600060066000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061158657fe5b906000526020600020015490507f8026a9704efe6321bfec7a15f26b062559b256f7e014486dc1ac9034de32080081600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a161169a600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168683604051806020016040528060008152506114f9565b508080600101915050611510565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e857600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161183257fe5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161193a57fe5b60006003600083815260200190815260200160002054905060006001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119e857fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611a4057fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611aa09190611c69565b50826003600083815260200190815260200160002081905550600060036000868152602001908152602001600020819055505050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b7e6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c4d90919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036003600084815260200190815260200160002081905550505050565b600080828401905083811015611c5f57fe5b8091505092915050565b815481835581811115611c9057818360005260206000209182019101611c8f9190611c95565b5b505050565b611cb791905b80821115611cb3576000816000905550600101611c9b565b5090565b9056fea265627a7a723158209e0002955e4750a2e0cf6e6b606af8b5a82a315a5f3cf25a7bf9fa33a7a104f364736f6c63430005100032",
  "sourceMap": "208:2402:8:-;;;7440:42:6;7419:63;;;;;;;;;;;;;;;;;;;;698:102:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;698:102:8;527:4:14;493:19;:31;513:10;493:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5079:4:6;5045:19;:31;5065:10;5045:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;771:4:8;737:19;:31;757:10;737:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;208:2402;;;;;;",
  "deployedSourceMap": "208:2402:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;208:2402:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:150:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;684:150:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2023:108:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2023:108:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11815:173:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11815:173:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10447:345;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10447:345:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19460:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19460:119:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19460:119:6;;;;;;;;;;;;;;;;;9804:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9804:280:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9109:179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9109:179:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;937:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;937:23:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19225:229;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19225:229:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5740:188;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5740:188:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5348:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5348:187:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7419:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2201:116:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2201:116:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6604:141:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6604:141:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11186:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11186:163:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8553:212;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8553:212:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8553:212:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8553:212:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8553:212:6;;;;;;;;;;;;:::i;:::-;;2435:172:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2435:172:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2435:172:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12195:268:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12195:268:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;684:150:14;775:4;796:19;:33;816:12;796:33;;;;;;;;;;;;;;;;;;;;;;;;;;;789:40;;684:150;;;:::o;2023:108:8:-;2074:19;2117:7;2109:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:108;:::o;11815:173:6:-;11928:7;11905:8;4941:1;4910:33;;:9;:19;4920:8;4910:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4902:42;;;;;;11958:13;:23;11972:8;11958:23;;;;;;;;;;;;;;;;;;;;;11951:30;;11815:173;;;;:::o;10447:345::-;10551:8;4192:18;4213:9;:19;4223:8;4213:19;;;;;;;;;;;;;;;;;;;;;4192:40;;4264:10;4250:24;;:10;:24;;;:68;;;;4278:16;:28;4295:10;4278:28;;;;;;;;;;;;;;;:40;4307:10;4278:40;;;;;;;;;;;;;;;;;;;;;;;;;4250:68;4242:77;;;;;;10578:8;4941:1;4910:33;;:9;:19;4920:8;4910:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4902:42;;;;;;10602:18;10623:9;:19;10633:8;10623:19;;;;;;;;;;;;;;;;;;;;;10602:40;;10673:10;10660:23;;:9;:23;;;;10652:32;;;;;;10720:9;10694:13;:23;10708:8;10694:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;10776:8;10765:9;10744:41;;10753:10;10744:41;;;;;;;;;;;;4954:1;4329;10447:345;;;;:::o;19460:119::-;19515:16;19554:10;:18;19565:6;19554:18;;;;;;;;;;;;;;;19547:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19460:119;;;:::o;9804:280::-;9929:18;9950:9;:19;9960:8;9950:19;;;;;;;;;;;;;;;;;;;;;9929:40;;10001:5;9987:19;;:10;:19;;;9979:28;;;;;;10040:1;10025:17;;:3;:17;;;;10017:26;;;;;;10053:24;10063:3;10068:8;10053:9;:24::i;:::-;;9804:280;;;;:::o;9109:179::-;9238:43;9256:5;9263:3;9268:8;9238:43;;;;;;;;;;;;:17;:43::i;:::-;9109:179;;;:::o;937:23::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19225:229::-;19273:7;19291:22;19343:1;19316:10;:17;19327:5;19316:17;;;;;;;;;;;;;;;:24;;;;:28;19291:53;;19355:17;19375:10;:17;19386:5;19375:17;;;;;;;;;;;;;;;19393:14;19375:33;;;;;;;;;;;;;;;;19355:53;;19426:10;:17;19437:5;19426:17;;;;;;;;;;;;;;;19444:1;19426:20;;;;;;;;;;;;;;;;19418:29;;;;19225:229;;;:::o;5740:188::-;5824:14;5863:9;:19;5873:8;5863:19;;;;;;;;;;;;;;;;;;;;;5854:28;;5918:1;5900:20;;:6;:20;;;;5892:29;;;;;;5740:188;;;:::o;5348:187::-;5432:7;5481:1;5463:20;;:6;:20;;;;5455:29;;;;;;5501:19;:27;5521:6;5501:27;;;;;;;;;;;;;;;;5494:34;;5348:187;;;:::o;7419:63::-;;;;;;;;;;;;;:::o;2201:116:8:-;2254:21;2301:9;2291:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:116;:::o;6604:141:6:-;6714:24;6720:5;6726:3;6730:7;6714:5;:24::i;:::-;6604:141;;;:::o;11186:163::-;11299:39;11318:9;11328;11299:18;:39::i;:::-;11186:163;;:::o;8553:212::-;8712:46;8730:5;8737:3;8742:8;8752:5;;8712:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8712:46:6;;;;;;:17;:46::i;:::-;8553:212;;;;;:::o;2435:172:8:-;2547:13;2502:8;4941:1:6;4910:33;;:9;:19;4920:8;4910:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4902:42;;;;;;2583:7:8;:17;2591:8;2583:17;;;;;;;;;;;2576:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2435:172;;;;:::o;12195:268:6:-;12313:4;12359:1;12341:20;;:6;:20;;;;12333:29;;;;;;12401:1;12380:23;;:9;:23;;;;12372:32;;;;;;12421:16;:24;12438:6;12421:24;;;;;;;;;;;;;;;:35;12446:9;12421:35;;;;;;;;;;;;;;;;;;;;;;;;;12414:42;;12195:268;;;;:::o;13234:305::-;13327:7;13355:12;13370:9;:19;13380:8;13370:19;;;;;;;;;;;;;;;;;;;;;13355:34;;13399:29;13413:4;13419:8;13399:13;:29::i;:::-;13438:25;13449:3;13454:8;13438:10;:25::i;:::-;13498:8;13493:3;13478:29;;13487:4;13478:29;;;;;;;;;;;;13524:8;13517:15;;;13234:305;;;;:::o;12734:315::-;13018:24;13028:3;13033:8;13018:9;:24::i;:::-;;12734:315;;;;:::o;7512:247::-;7589:6;7598:1;7589:10;;7585:168;7602:7;7600:1;:9;7585:168;;;7628:9;7640:10;:15;7651:3;;;;;;;;;;;7640:15;;;;;;;;;;;;;;;7656:1;7640:18;;;;;;;;;;;;;;;;7628:30;;7677:16;7681:1;7683:3;;;;;;;;;;;7687;7691:1;7677:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7707:35;7725:3;;;;;;;;;;;7730:5;7737:1;7707:35;;;;;;;;;;;;:17;:35::i;:::-;7585:168;7610:3;;;;;;;7585:168;;;;7512:247;;;:::o;11354:275::-;11495:1;11474:23;;:9;:23;;;;11466:32;;;;;;11550:9;11508:16;:28;11525:10;11508:28;;;;;;;;;;;;;;;:39;11537:9;11508:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;11601:9;11574:48;;11589:10;11574:48;;;11612:9;11574:48;;;;;;;;;;;;;;;;;;;;;;11354:275;;:::o;16584:810::-;16768:1;16739:19;:26;16759:5;16739:26;;;;;;;;;;;;;;;;:30;16732:38;;;;16838:1;16809:19;:26;16829:5;16809:26;;;;;;;;;;;;;;;;:30;16780:19;:26;16800:5;16780:26;;;;;;;;;;;;;;;:59;;;;16856:9;:19;16866:8;16856:19;;;;;;;;;;;;16849:26;;;;;;;;;;;16919:1;16892:10;:17;16903:5;16892:17;;;;;;;;;;;;;;;:24;;;;:28;16885:36;;;;16931:26;16960:14;:24;16975:8;16960:24;;;;;;;;;;;;16931:53;;16994:22;17046:1;17019:10;:17;17030:5;17019:17;;;;;;;;;;;;;;;:24;;;;:28;16994:53;;17057:17;17077:10;:17;17088:5;17077:17;;;;;;;;;;;;;;;17095:14;17077:33;;;;;;;;;;;;;;;;17057:53;;17160:9;17120:10;:17;17131:5;17120:17;;;;;;;;;;;;;;;17138:18;17120:37;;;;;;;;;;;;;;;:49;;;;17179:10;:17;17190:5;17179:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;17331:18;17303:14;:25;17318:9;17303:25;;;;;;;;;;;:46;;;;17386:1;17359:14;:24;17374:8;17359:24;;;;;;;;;;;:28;;;;16584:810;;;;;:::o;17655:356::-;17829:3;17807:9;:19;17817:8;17807:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;17869:31;17898:1;17869:19;:24;17889:3;17869:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;17842:19;:24;17862:3;17842:24;;;;;;;;;;;;;;;:58;;;;17910:14;17927:10;:15;17938:3;17927:15;;;;;;;;;;;;;;;17948:8;17927:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17927:30:6;;;;;;;;;;;;;;;;;;;;;17910:47;;18003:1;17994:6;:10;17967:14;:24;17982:8;17967:24;;;;;;;;;;;:37;;;;17655:356;;;:::o;1468:160:10:-;1552:7;1569:9;1586:2;1581;:7;1569:19;;1606:2;1601:1;:7;;1594:15;;;;1622:1;1615:8;;;1468:160;;;;:::o;208:2402:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// pragma solidity ^0.4.20;\n\npragma solidity >=0.4.21 <0.7.0;\nimport \"./NFToken.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n    string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n    string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n    mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n    constructor()\n    public\n    {\n        supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n    }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is a internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _owner Address of the NFT owner.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n    function _burn(\n        address _owner,\n        uint256 _tokenId\n    )\n    internal\n    {\n        super._burn(_owner, _tokenId);\n\n        if (bytes(idToUri[_tokenId]).length != 0) {\n            delete idToUri[_tokenId];\n        }\n    }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice this is a internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want uri.\n   * @param _uri String representing RFC 3986 URI.\n   */\n    function _setTokenUri(\n        uint256 _tokenId,\n        string memory _uri\n    )\n    validNFToken(_tokenId)\n    internal\n    {\n        idToUri[_tokenId] = _uri;\n    }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   */\n    function name()\n    external\n    view\n    returns (string memory _name)\n    {\n        _name = nftName;\n    }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   */\n    function symbol()\n    external\n    view\n    returns (string memory _symbol)\n    {\n        _symbol = nftSymbol;\n    }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   */\n    function tokenURI(\n        uint256 _tokenId\n    )\n    validNFToken(_tokenId)\n    external\n    view\n    returns (string memory)\n    {\n        return idToUri[_tokenId];\n    }\n\n}\n",
  "sourcePath": "/home/kottackal/Desktop/Farm/contracts/NFTokenMetadata.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [
        1720
      ]
    },
    "id": 1721,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1613,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "29:32:8"
      },
      {
        "absolutePath": "project:/contracts/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 1614,
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 1323,
        "src": "62:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1615,
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 146,
        "src": "86:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1616,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1322,
              "src": "238:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$1322",
                "typeString": "contract NFToken"
              }
            },
            "id": 1617,
            "nodeType": "InheritanceSpecifier",
            "src": "238:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1618,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 145,
              "src": "249:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$145",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1619,
            "nodeType": "InheritanceSpecifier",
            "src": "249:14:8"
          }
        ],
        "contractDependencies": [
          101,
          145,
          1322,
          2717,
          2749
        ],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 1720,
        "linearizedBaseContracts": [
          1720,
          145,
          1322,
          2749,
          2717,
          101
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1621,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "338:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1620,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "338:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1623,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "424:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1622,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "424:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1627,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "515:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1626,
              "keyType": {
                "id": 1624,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "524:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "515:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1625,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "535:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1636,
              "nodeType": "Block",
              "src": "727:73:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2726,
                        "src": "737:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 1632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:10:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "737:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "771:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "737:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "737:38:8"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 1637,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:2:8"
            },
            "returnParameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:8"
            },
            "scope": 1720,
            "src": "698:102:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1238:147:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1647,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "1260:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1648,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "1268:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1644,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2799,
                        "src": "1248:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$1720",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1134,
                      "src": "1248:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:29:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1652,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "1298:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1654,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1653,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "1306:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1298:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 1651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1292:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1292:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1292:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1327:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1292:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1665,
                  "nodeType": "IfStatement",
                  "src": "1288:91:8",
                  "trueBody": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "1330:49:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1344:24:8",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1659,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "1351:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1661,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1660,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "1359:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1351:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ExpressionStatement",
                        "src": "1344:24:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "1174:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1641,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "1198:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1164:56:8"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:8"
            },
            "scope": 1720,
            "src": "1150:235:8",
            "stateMutability": "nonpayable",
            "superFunction": 1134,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1683,
              "nodeType": "Block",
              "src": "1897:41:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1677,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "1907:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1679,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1678,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1669,
                        "src": "1915:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1907:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1680,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "1927:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1907:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1682,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:24:8"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 1684,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1674,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1669,
                    "src": "1870:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1673,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 544,
                  "src": "1857:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1857:22:8"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1684,
                  "src": "1802:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1671,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1684,
                  "src": "1828:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1792:60:8"
            },
            "returnParameters": {
              "id": 1676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:0:8"
            },
            "scope": 1720,
            "src": "1771:167:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1693,
              "nodeType": "Block",
              "src": "2099:32:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1689,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "2109:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1690,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "2117:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2109:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1692,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:15:8"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
            "id": 1694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:8"
            },
            "returnParameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1694,
                  "src": "2074:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2073:21:8"
            },
            "scope": 1720,
            "src": "2023:108:8",
            "stateMutability": "view",
            "superFunction": 132,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "2281:36:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1699,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1697,
                      "src": "2291:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1700,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1623,
                      "src": "2301:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2291:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:19:8"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.",
            "id": 1704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:2:8"
            },
            "returnParameters": {
              "id": 1698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1697,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2254:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2253:23:8"
            },
            "scope": 1720,
            "src": "2201:116:8",
            "stateMutability": "view",
            "superFunction": 137,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "2566:41:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1714,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1627,
                      "src": "2583:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1716,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1715,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1706,
                      "src": "2591:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2583:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1713,
                  "id": 1717,
                  "nodeType": "Return",
                  "src": "2576:24:8"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1709,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1706,
                    "src": "2502:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1710,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1708,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 544,
                  "src": "2489:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2489:22:8"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "2462:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2452:32:8"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "2547:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2546:15:8"
            },
            "scope": 1720,
            "src": "2435:172:8",
            "stateMutability": "view",
            "superFunction": 144,
            "visibility": "external"
          }
        ],
        "scope": 1721,
        "src": "208:2402:8"
      }
    ],
    "src": "29:2582:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/NFTokenMetadata.sol",
      "exportedSymbols": {
        "NFTokenMetadata": [
          1720
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.7",
            ".0"
          ]
        },
        "id": 1613,
        "name": "PragmaDirective",
        "src": "29:32:8"
      },
      {
        "attributes": {
          "SourceUnit": 1323,
          "absolutePath": "project:/contracts/NFToken.sol",
          "file": "./NFToken.sol",
          "scope": 1721,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1614,
        "name": "ImportDirective",
        "src": "62:23:8"
      },
      {
        "attributes": {
          "SourceUnit": 146,
          "absolutePath": "project:/contracts/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1721,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1615,
        "name": "ImportDirective",
        "src": "86:30:8"
      },
      {
        "attributes": {
          "contractDependencies": [
            101,
            145,
            1322,
            2717,
            2749
          ],
          "contractKind": "contract",
          "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1720,
            145,
            1322,
            2749,
            2717,
            101
          ],
          "name": "NFTokenMetadata",
          "scope": 1721
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFToken",
                  "referencedDeclaration": 1322,
                  "type": "contract NFToken"
                },
                "id": 1616,
                "name": "UserDefinedTypeName",
                "src": "238:7:8"
              }
            ],
            "id": 1617,
            "name": "InheritanceSpecifier",
            "src": "238:7:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 145,
                  "type": "contract ERC721Metadata"
                },
                "id": 1618,
                "name": "UserDefinedTypeName",
                "src": "249:14:8"
              }
            ],
            "id": 1619,
            "name": "InheritanceSpecifier",
            "src": "249:14:8"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftName",
              "scope": 1720,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 1620,
                "name": "ElementaryTypeName",
                "src": "338:6:8"
              }
            ],
            "id": 1621,
            "name": "VariableDeclaration",
            "src": "338:23:8"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftSymbol",
              "scope": 1720,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 1622,
                "name": "ElementaryTypeName",
                "src": "424:6:8"
              }
            ],
            "id": 1623,
            "name": "VariableDeclaration",
            "src": "424:25:8"
          },
          {
            "attributes": {
              "constant": false,
              "name": "idToUri",
              "scope": 1720,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => string)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1624,
                    "name": "ElementaryTypeName",
                    "src": "524:7:8"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 1625,
                    "name": "ElementaryTypeName",
                    "src": "535:6:8"
                  }
                ],
                "id": 1626,
                "name": "Mapping",
                "src": "515:27:8"
              }
            ],
            "id": 1627,
            "name": "VariableDeclaration",
            "src": "515:44:8"
          },
          {
            "attributes": {
              "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1720,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1628,
                "name": "ParameterList",
                "src": "709:2:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1629,
                "name": "ParameterList",
                "src": "727:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2726,
                                  "type": "mapping(bytes4 => bool)",
                                  "value": "supportedInterfaces"
                                },
                                "id": 1630,
                                "name": "Identifier",
                                "src": "737:19:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30783562356531333966",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1532892063",
                                  "value": "0x5b5e139f"
                                },
                                "id": 1631,
                                "name": "Literal",
                                "src": "757:10:8"
                              }
                            ],
                            "id": 1632,
                            "name": "IndexAccess",
                            "src": "737:31:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1633,
                            "name": "Literal",
                            "src": "771:4:8"
                          }
                        ],
                        "id": 1634,
                        "name": "Assignment",
                        "src": "737:38:8"
                      }
                    ],
                    "id": 1635,
                    "name": "ExpressionStatement",
                    "src": "737:38:8"
                  }
                ],
                "id": 1636,
                "name": "Block",
                "src": "727:73:8"
              }
            ],
            "id": 1637,
            "name": "FunctionDefinition",
            "src": "698:102:8"
          },
          {
            "attributes": {
              "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_burn",
              "scope": 1720,
              "stateMutability": "nonpayable",
              "superFunction": 1134,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 1667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1638,
                        "name": "ElementaryTypeName",
                        "src": "1174:7:8"
                      }
                    ],
                    "id": 1639,
                    "name": "VariableDeclaration",
                    "src": "1174:14:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1640,
                        "name": "ElementaryTypeName",
                        "src": "1198:7:8"
                      }
                    ],
                    "id": 1641,
                    "name": "VariableDeclaration",
                    "src": "1198:16:8"
                  }
                ],
                "id": 1642,
                "name": "ParameterList",
                "src": "1164:56:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1643,
                "name": "ParameterList",
                "src": "1238:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_burn",
                              "referencedDeclaration": 1134,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2799,
                                  "type": "contract super NFTokenMetadata",
                                  "value": "super"
                                },
                                "id": 1644,
                                "name": "Identifier",
                                "src": "1248:5:8"
                              }
                            ],
                            "id": 1646,
                            "name": "MemberAccess",
                            "src": "1248:11:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1639,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 1647,
                            "name": "Identifier",
                            "src": "1260:6:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1641,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1648,
                            "name": "Identifier",
                            "src": "1268:8:8"
                          }
                        ],
                        "id": 1649,
                        "name": "FunctionCall",
                        "src": "1248:29:8"
                      }
                    ],
                    "id": 1650,
                    "name": "ExpressionStatement",
                    "src": "1248:29:8"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 1651,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1292:5:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1627,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 1652,
                                        "name": "Identifier",
                                        "src": "1298:7:8"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1641,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 1653,
                                        "name": "Identifier",
                                        "src": "1306:8:8"
                                      }
                                    ],
                                    "id": 1654,
                                    "name": "IndexAccess",
                                    "src": "1298:17:8"
                                  }
                                ],
                                "id": 1655,
                                "name": "FunctionCall",
                                "src": "1292:24:8"
                              }
                            ],
                            "id": 1656,
                            "name": "MemberAccess",
                            "src": "1292:31:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1657,
                            "name": "Literal",
                            "src": "1327:1:8"
                          }
                        ],
                        "id": 1658,
                        "name": "BinaryOperation",
                        "src": "1292:36:8"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1627,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 1659,
                                        "name": "Identifier",
                                        "src": "1351:7:8"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1641,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 1660,
                                        "name": "Identifier",
                                        "src": "1359:8:8"
                                      }
                                    ],
                                    "id": 1661,
                                    "name": "IndexAccess",
                                    "src": "1351:17:8"
                                  }
                                ],
                                "id": 1662,
                                "name": "UnaryOperation",
                                "src": "1344:24:8"
                              }
                            ],
                            "id": 1663,
                            "name": "ExpressionStatement",
                            "src": "1344:24:8"
                          }
                        ],
                        "id": 1664,
                        "name": "Block",
                        "src": "1330:49:8"
                      }
                    ],
                    "id": 1665,
                    "name": "IfStatement",
                    "src": "1288:91:8"
                  }
                ],
                "id": 1666,
                "name": "Block",
                "src": "1238:147:8"
              }
            ],
            "id": 1667,
            "name": "FunctionDefinition",
            "src": "1150:235:8"
          },
          {
            "attributes": {
              "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "_setTokenUri",
              "scope": 1720,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1684,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1668,
                        "name": "ElementaryTypeName",
                        "src": "1802:7:8"
                      }
                    ],
                    "id": 1669,
                    "name": "VariableDeclaration",
                    "src": "1802:16:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1684,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1670,
                        "name": "ElementaryTypeName",
                        "src": "1828:6:8"
                      }
                    ],
                    "id": 1671,
                    "name": "VariableDeclaration",
                    "src": "1828:18:8"
                  }
                ],
                "id": 1672,
                "name": "ParameterList",
                "src": "1792:60:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1676,
                "name": "ParameterList",
                "src": "1897:0:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 544,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 1673,
                    "name": "Identifier",
                    "src": "1857:12:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1669,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 1674,
                    "name": "Identifier",
                    "src": "1870:8:8"
                  }
                ],
                "id": 1675,
                "name": "ModifierInvocation",
                "src": "1857:22:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1627,
                                  "type": "mapping(uint256 => string storage ref)",
                                  "value": "idToUri"
                                },
                                "id": 1677,
                                "name": "Identifier",
                                "src": "1907:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1669,
                                  "type": "uint256",
                                  "value": "_tokenId"
                                },
                                "id": 1678,
                                "name": "Identifier",
                                "src": "1915:8:8"
                              }
                            ],
                            "id": 1679,
                            "name": "IndexAccess",
                            "src": "1907:17:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1671,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1680,
                            "name": "Identifier",
                            "src": "1927:4:8"
                          }
                        ],
                        "id": 1681,
                        "name": "Assignment",
                        "src": "1907:24:8"
                      }
                    ],
                    "id": 1682,
                    "name": "ExpressionStatement",
                    "src": "1907:24:8"
                  }
                ],
                "id": 1683,
                "name": "Block",
                "src": "1897:41:8"
              }
            ],
            "id": 1684,
            "name": "FunctionDefinition",
            "src": "1771:167:8"
          },
          {
            "attributes": {
              "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "name",
              "scope": 1720,
              "stateMutability": "view",
              "superFunction": 132,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1685,
                "name": "ParameterList",
                "src": "2036:2:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 1694,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1686,
                        "name": "ElementaryTypeName",
                        "src": "2074:6:8"
                      }
                    ],
                    "id": 1687,
                    "name": "VariableDeclaration",
                    "src": "2074:19:8"
                  }
                ],
                "id": 1688,
                "name": "ParameterList",
                "src": "2073:21:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1687,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 1689,
                            "name": "Identifier",
                            "src": "2109:5:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1621,
                              "type": "string storage ref",
                              "value": "nftName"
                            },
                            "id": 1690,
                            "name": "Identifier",
                            "src": "2117:7:8"
                          }
                        ],
                        "id": 1691,
                        "name": "Assignment",
                        "src": "2109:15:8"
                      }
                    ],
                    "id": 1692,
                    "name": "ExpressionStatement",
                    "src": "2109:15:8"
                  }
                ],
                "id": 1693,
                "name": "Block",
                "src": "2099:32:8"
              }
            ],
            "id": 1694,
            "name": "FunctionDefinition",
            "src": "2023:108:8"
          },
          {
            "attributes": {
              "documentation": "@dev Returns an abbreviated name for NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "symbol",
              "scope": 1720,
              "stateMutability": "view",
              "superFunction": 137,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1695,
                "name": "ParameterList",
                "src": "2216:2:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 1704,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1696,
                        "name": "ElementaryTypeName",
                        "src": "2254:6:8"
                      }
                    ],
                    "id": 1697,
                    "name": "VariableDeclaration",
                    "src": "2254:21:8"
                  }
                ],
                "id": 1698,
                "name": "ParameterList",
                "src": "2253:23:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1697,
                              "type": "string memory",
                              "value": "_symbol"
                            },
                            "id": 1699,
                            "name": "Identifier",
                            "src": "2291:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1623,
                              "type": "string storage ref",
                              "value": "nftSymbol"
                            },
                            "id": 1700,
                            "name": "Identifier",
                            "src": "2301:9:8"
                          }
                        ],
                        "id": 1701,
                        "name": "Assignment",
                        "src": "2291:19:8"
                      }
                    ],
                    "id": 1702,
                    "name": "ExpressionStatement",
                    "src": "2291:19:8"
                  }
                ],
                "id": 1703,
                "name": "Block",
                "src": "2281:36:8"
              }
            ],
            "id": 1704,
            "name": "FunctionDefinition",
            "src": "2201:116:8"
          },
          {
            "attributes": {
              "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "tokenURI",
              "scope": 1720,
              "stateMutability": "view",
              "superFunction": 144,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1719,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1705,
                        "name": "ElementaryTypeName",
                        "src": "2462:7:8"
                      }
                    ],
                    "id": 1706,
                    "name": "VariableDeclaration",
                    "src": "2462:16:8"
                  }
                ],
                "id": 1707,
                "name": "ParameterList",
                "src": "2452:32:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1719,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1711,
                        "name": "ElementaryTypeName",
                        "src": "2547:6:8"
                      }
                    ],
                    "id": 1712,
                    "name": "VariableDeclaration",
                    "src": "2547:13:8"
                  }
                ],
                "id": 1713,
                "name": "ParameterList",
                "src": "2546:15:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 544,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 1708,
                    "name": "Identifier",
                    "src": "2489:12:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1706,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 1709,
                    "name": "Identifier",
                    "src": "2502:8:8"
                  }
                ],
                "id": 1710,
                "name": "ModifierInvocation",
                "src": "2489:22:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1713
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1627,
                              "type": "mapping(uint256 => string storage ref)",
                              "value": "idToUri"
                            },
                            "id": 1714,
                            "name": "Identifier",
                            "src": "2583:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1706,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1715,
                            "name": "Identifier",
                            "src": "2591:8:8"
                          }
                        ],
                        "id": 1716,
                        "name": "IndexAccess",
                        "src": "2583:17:8"
                      }
                    ],
                    "id": 1717,
                    "name": "Return",
                    "src": "2576:24:8"
                  }
                ],
                "id": 1718,
                "name": "Block",
                "src": "2566:41:8"
              }
            ],
            "id": 1719,
            "name": "FunctionDefinition",
            "src": "2435:172:8"
          }
        ],
        "id": 1720,
        "name": "ContractDefinition",
        "src": "208:2402:8"
      }
    ],
    "id": 1721,
    "name": "SourceUnit",
    "src": "29:2582:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2023-02-14T07:32:17.052Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens."
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safe(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": "When implementing this contract don't forget to set nftName and nftSymbol.",
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safe(address,address,uint256)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}